#pandas 入门
pip install pandas 
from pandas import Series,DataFrame
import pandas as pd
import numpy as np
##series  一维数组
obj=Series([4,7,-5,3])

obj.value #获取值
obj.index#获取索引

obj2=Series([4,7,-5,3],index=['d','b','a','c'])#自行建索引，类比R的 colname

obj2['a'] #通过索引选值
obj2['d']=6 #通过索引修改值

obj2[obj2>0] 
obj2*2
np.exp(obj2)
###上述操作都跟R相差不多
'b' in obj2

sdata={'ohio':35000,'texas':71000,'oregon':16000,'utah':5000} #数据字典
obj3=Series(sdata) #将数据字典直接转化为series格式

obj3.name = 'population'
obj3.index.name='state'

obj.index=['bob','steve','jeff','ryan']
obj

###dataframe

data= {'state':['ohio','ohio','ohio','nebada','nevada'],'year':[2000,2001,2002,2001,2002],'pop':[1.5,1.7,3.6,2.4,2.9]}
frame=DataFrame(data)

DataFrame(data,columns=['year','state','pop']) #转变列顺序

frame2= DataFrame(data,columns=['year','state','pop','debt'],index=['one','two','three','four','five'])

frame2['state'] #抽取某列
frame2.year #第二种方法

frame2.ix['three']  #索引到某一个值
frame2['debt']=16.5

frame2['debt']=np.arange(5.)

frame2['eastern']=frame2.state == 'ohio'  #创造薪列

frame2

del frame2['eastern']  #删除列

#嵌套字典
pop ={'nevada':{2001:2.4,2002:2.9},'ohio':{2000:1.5,2001:1.7,2002:3.6}}

frame3= DataFrame(pop)
frame3.T

frame3.index.name= 'year';frame3.columns.name='state'

obj
####索引对象

obj =Series(range(3),index=['a','b','c'])

index = obj.index

index
index[1:]

index= pd.Index(np.arange(3))

obj2=Series([1.5,-2.5,0],index=index)

obj2.index is index

'ohio' in frame3.columns 

2003 in frame3.index 

frame3.index.unique

# diff 差分
#intersection 计算交集
#union 计算并集
obj = Series([4.5,7.2,-5.3,3.6],index=['d','b','a','c'])

obj2=obj.reindex(['a','b','c','d','e'])

#实现向前值填充
obj3=Series(['blue','purple','yellow'],index=[0,2,4])

obj3.reindex(range(6),method='ffill')

frame=DataFrame(np.arange(9).reshape((3,3),index=['a','c','d'],columns=['ohio','texas','california'])

frame2=frame.reindex(['a','b','c','d'])

#更改列名
states= ['texas','utah','california']
frame.reindex(columns=states)
#插入列
frame.reindex(index=['a','b','c','d'],method='ffill',columns=states)

#丢弃指定项目
obj=Series(np.arange(5.),index=['a','b','c','d','e'])

new_obj=obj.drop('c')
obj.drop(['d','c'])

#dataframe可以随意删除轴上的索引
data=DataFrame(np.arange(16).reshape((4,4)),index=['ohio','colorado','utah','new york'],columns=['one','two','three','four'])

data.drop(['colorado','ohio'])

data.drop('two',axis=1)

data.drop(['two','four'],axis=1)

#索引、选取、过滤

obj=Series(np.arange(4.),index=['a','b','c','d'])

obj[1]

obj[2:4];obj[[1,3]]  ;obj[obj<2] #索引基本与R一致，除了角标从0开始的特点不同

#算数运算和数据对齐

s1=Series([7.3,-2.5,3.4,1.5],index=['a','b','d','e'])
s2=Series([-2.1,3.6,-1.5,4,3.1],index=['a','c','e','f','g'])
#会根据标签自动补齐
df1= DataFrame(np.arange(9.).reshape((3,3)),columns=list('bcd'),index=['ohio','texas','colorado'])
df2=DataFrame(np.arange(12.).reshape((4,3)),columns=list('bde'),index=['utah','ohio','texas','orgon'])
df1
df2
df1+df2#重叠的位置相加，不重叠的位置成NA值

df1.add(df2,fill_value=0)#不重叠的位置填充
# add 加法  sub 建法 div 除法 mul 乘法
